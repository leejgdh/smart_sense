# ============================================================
# SmartSense Development Environment
# ============================================================
#
# Usage:
#   docker-compose -f docker-compose.dev.yml up -d
#
# This runs only infrastructure services (DB, MQTT)
# Backend should be run locally: cd backend && npm run start:dev
# Frontend (optional): cd frontend && npm run dev
#
# ============================================================

services:
  # ========================================
  # PostgreSQL with TimescaleDB Extension
  # ========================================
  postgres:
    image: timescale/timescaledb:latest-pg16
    container_name: smartsense-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-smartsense}
      POSTGRES_USER: ${POSTGRES_USER:-smartsense}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      TZ: Asia/Seoul
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
    networks:
      - smartsense-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-smartsense}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ========================================
  # Mosquitto MQTT Broker
  # ========================================
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: smartsense-mqtt-dev
    restart: unless-stopped
    ports:
      - "${MQTT_PORT:-1883}:1883"
      - "${MQTT_WS_PORT:-9001}:9001"
    volumes:
      - ./config/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto-dev-data:/mosquitto/data
      - mosquitto-dev-log:/mosquitto/log
    networks:
      - smartsense-network
    healthcheck:
      test: ["CMD-SHELL", "mosquitto_sub -t '$$SYS/#' -C 1 -i healthcheck -W 3"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ========================================
  # Backend API (NestJS) - Built from source
  # ========================================
  smartsense:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: smartsense-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      DATABASE_URL: postgresql://${POSTGRES_USER:-smartsense}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-smartsense}
      MQTT_BROKER_URL: mqtt://mosquitto:1883
      OLLAMA_URL: ${OLLAMA_URL:-http://ollama}
      PORT: 3000
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_CLIENT_EMAIL: ${FIREBASE_CLIENT_EMAIL}
      FIREBASE_PRIVATE_KEY: ${FIREBASE_PRIVATE_KEY}
    env_file:
      - .env
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
      mosquitto:
        condition: service_healthy
    networks:
      - smartsense-network
networks:
  smartsense-network:
    driver: bridge
    name: smartsense-network-dev

volumes:
  postgres-dev-data:
    name: smartsense-postgres-dev
  mosquitto-dev-data:
    name: smartsense-mosquitto-dev-data
  mosquitto-dev-log:
    name: smartsense-mosquitto-dev-log
